{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudra\\\\Downloads\\\\QuickSell_Frontend_Assignment-master\\\\QuickSell_Frontend_Assignment-master\\\\src\\\\components\\\\ProfileIcon.jsx\";\nimport React from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\n// Import the icons based on userId\nimport icon1 from \"../assets/icon1.png\";\nimport icon2 from \"../assets/icon2.png\";\nimport icon3 from \"../assets/icon3.png\";\nimport icon4 from \"../assets/icon4.png\";\nimport icon5 from \"../assets/icon5.png\";\nimport icon from \"../assets/icon.jpeg\";\n// Add more imports as needed\n\nimport onlineIcon from \"../assets/online.png\";\nimport offlineIcon from \"../assets/new-circle.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileIcon = ({\n  userId,\n  getUserAvailability\n}) => {\n  // Map userId to corresponding icon\n  const iconMapping = {\n    \"usr-1\": icon1,\n    \"usr-2\": icon2,\n    \"usr-3\": icon3,\n    \"usr-4\": icon4,\n    \"usr-5\": icon5\n    // Add more mappings as needed\n  };\n\n  // Get the icon based on userId, default to a generic icon if not found\n  const userIcon = iconMapping[userId] || icon;\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: getUserAvailability(userId) ? \"Online\" : \"Offline\",\n    followCursor: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userIcon,\n        alt: \"icon\",\n        style: {\n          width: \"16px\",\n          height: \"16px\",\n          marginRight: \"4px\",\n          borderRadius: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getUserAvailability(userId) ? onlineIcon : offlineIcon,\n        alt: getUserAvailability(userId) ? \"Online\" : \"Offline\",\n        style: {\n          width: \"10px\",\n          height: \"10px\",\n          position: \"absolute\",\n          top: \"10px\",\n          left: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfileIcon;\nexport default ProfileIcon;\nvar _c;\n$RefreshReg$(_c, \"ProfileIcon\");","map":{"version":3,"names":["React","Tooltip","icon1","icon2","icon3","icon4","icon5","icon","onlineIcon","offlineIcon","jsxDEV","_jsxDEV","ProfileIcon","userId","getUserAvailability","iconMapping","userIcon","title","followCursor","children","style","position","src","alt","width","height","marginRight","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","top","left","_c","$RefreshReg$"],"sources":["C:/Users/rudra/Downloads/QuickSell_Frontend_Assignment-master/QuickSell_Frontend_Assignment-master/src/components/ProfileIcon.jsx"],"sourcesContent":["import React from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\n// Import the icons based on userId\nimport icon1 from \"../assets/icon1.png\";\nimport icon2 from \"../assets/icon2.png\";\nimport icon3 from \"../assets/icon3.png\";\nimport icon4 from \"../assets/icon4.png\";\nimport icon5 from \"../assets/icon5.png\";\nimport icon from \"../assets/icon.jpeg\";\n// Add more imports as needed\n\nimport onlineIcon from \"../assets/online.png\";\nimport offlineIcon from \"../assets/new-circle.png\";\n\nconst ProfileIcon = ({ userId, getUserAvailability }) => {\n  // Map userId to corresponding icon\n  const iconMapping = {\n    \"usr-1\": icon1,\n    \"usr-2\": icon2,\n    \"usr-3\": icon3,\n    \"usr-4\": icon4,\n    \"usr-5\": icon5,\n    // Add more mappings as needed\n  };\n\n  // Get the icon based on userId, default to a generic icon if not found\n  const userIcon = iconMapping[userId] || icon;\n\n  return (\n    <Tooltip\n      title={getUserAvailability(userId) ? \"Online\" : \"Offline\"}\n      followCursor\n    >\n      <div style={{ position: \"relative\"}}>\n        <img\n          src={userIcon}\n          alt=\"icon\"\n          style={{\n            width: \"16px\",\n            height: \"16px\",\n            marginRight: \"4px\",\n            borderRadius: \"10px\"\n          }}\n        />\n        <img\n          src={getUserAvailability(userId) ? onlineIcon : offlineIcon}\n          alt={getUserAvailability(userId) ? \"Online\" : \"Offline\"}\n          style={{\n            width: \"10px\",\n            height: \"10px\",\n            position: \"absolute\",\n            top: \"10px\",\n            left: \"10px\",\n          }}\n        />\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default ProfileIcon;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;;AAE3C;AACA,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,qBAAqB;AACtC;;AAEA,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAoB,CAAC,KAAK;EACvD;EACA,MAAMC,WAAW,GAAG;IAClB,OAAO,EAAEb,KAAK;IACd,OAAO,EAAEC,KAAK;IACd,OAAO,EAAEC,KAAK;IACd,OAAO,EAAEC,KAAK;IACd,OAAO,EAAEC;IACT;EACF,CAAC;;EAED;EACA,MAAMU,QAAQ,GAAGD,WAAW,CAACF,MAAM,CAAC,IAAIN,IAAI;EAE5C,oBACEI,OAAA,CAACV,OAAO;IACNgB,KAAK,EAAEH,mBAAmB,CAACD,MAAM,CAAC,GAAG,QAAQ,GAAG,SAAU;IAC1DK,YAAY;IAAAC,QAAA,eAEZR,OAAA;MAAKS,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAU,CAAE;MAAAF,QAAA,gBAClCR,OAAA;QACEW,GAAG,EAAEN,QAAS;QACdO,GAAG,EAAC,MAAM;QACVH,KAAK,EAAE;UACLI,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,KAAK;UAClBC,YAAY,EAAE;QAChB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFpB,OAAA;QACEW,GAAG,EAAER,mBAAmB,CAACD,MAAM,CAAC,GAAGL,UAAU,GAAGC,WAAY;QAC5Dc,GAAG,EAAET,mBAAmB,CAACD,MAAM,CAAC,GAAG,QAAQ,GAAG,SAAU;QACxDO,KAAK,EAAE;UACLI,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdJ,QAAQ,EAAE,UAAU;UACpBW,GAAG,EAAE,MAAM;UACXC,IAAI,EAAE;QACR;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACG,EAAA,GA5CItB,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}